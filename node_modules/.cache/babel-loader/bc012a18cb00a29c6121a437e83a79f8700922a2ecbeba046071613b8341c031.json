{"ast":null,"code":"var _jsxFileName = \"/Users/evgenijrabocij/Documents/Antara/antara-test-task/src/components/VideoAsset.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Rnd } from 'react-rnd';\nimport styled from '@emotion/styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StyledVideo = styled.video`\nwidth: ${props => props.width};\nheight: ${props => props.height};\n`;\n_c = StyledVideo;\nconst LoadingDiv = styled.div`\nposition:fixed;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nz-index:101;\nwidth:100vw;\nheight:100vh;\ntop:0;\nleft:0;\nbackground: #000;\nopacity: 0.2;\nh3{\n    color: #fff;\n}\n`;\n_c2 = LoadingDiv;\nconst VideoAsset = ({\n  assetData,\n  isSelected,\n  globalPlay,\n  changeAssetData,\n  changeSelectedAsset\n}) => {\n  _s();\n  const videoRef = useRef(null);\n  const [loading, setLoading] = useState(true);\n  const getVideoDimensions = e => {\n    changeAssetData({\n      ...assetData,\n      width: e.target.videoWidth * 0.2,\n      height: e.target.videoHeight * 0.2\n    });\n    setLoading(false);\n  };\n  useEffect(() => {\n    if (videoRef !== null && videoRef !== void 0 && videoRef.current) {\n      if (globalPlay) {\n        videoRef.current.play();\n      } else videoRef.current.pause();\n    }\n  }, [videoRef, globalPlay]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [loading && /*#__PURE__*/_jsxDEV(LoadingDiv, {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 37\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(Rnd, {\n      lockAspectRatio: true,\n      size: {\n        width: assetData.width,\n        height: assetData.height\n      },\n      position: {\n        x: assetData.x,\n        y: assetData.y\n      },\n      style: {\n        zIndex: isSelected ? 100 : 0\n      },\n      onDragStart: () => {\n        changeSelectedAsset(assetData.id);\n      },\n      onDragStop: (e, d) => {\n        changeAssetData({\n          ...assetData,\n          x: d.x,\n          y: d.y\n        });\n      },\n      onResize: (e, direction, ref, delta, position) => {\n        changeAssetData({\n          ...assetData,\n          width: ref.style.width.slice(0, -2),\n          height: ref.style.height.slice(0, -2),\n          ...position\n        });\n      },\n      children: /*#__PURE__*/_jsxDEV(StyledVideo, {\n        ref: videoRef,\n        controls: true,\n        width: assetData.width,\n        height: assetData.height,\n        className: isSelected ? 'selectedAsset' : '',\n        src: assetData.url,\n        onLoadedMetadata: getVideoDimensions,\n        autoPlay: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(VideoAsset, \"8VTqx00LqDQS2wOl40OI4sI0Y7E=\");\n_c3 = VideoAsset;\nexport default VideoAsset;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"StyledVideo\");\n$RefreshReg$(_c2, \"LoadingDiv\");\n$RefreshReg$(_c3, \"VideoAsset\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Rnd","styled","jsxDEV","_jsxDEV","Fragment","_Fragment","StyledVideo","video","props","width","height","_c","LoadingDiv","div","_c2","VideoAsset","assetData","isSelected","globalPlay","changeAssetData","changeSelectedAsset","_s","videoRef","loading","setLoading","getVideoDimensions","e","target","videoWidth","videoHeight","current","play","pause","children","fileName","_jsxFileName","lineNumber","columnNumber","lockAspectRatio","size","position","x","y","style","zIndex","onDragStart","id","onDragStop","d","onResize","direction","ref","delta","slice","controls","className","src","url","onLoadedMetadata","autoPlay","_c3","$RefreshReg$"],"sources":["/Users/evgenijrabocij/Documents/Antara/antara-test-task/src/components/VideoAsset.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { Rnd } from 'react-rnd'\nimport { AssetType } from \"./Main\";\nimport styled from '@emotion/styled'\n\nconst StyledVideo = styled.video`\nwidth: ${props => props.width};\nheight: ${props => props.height};\n`\nconst LoadingDiv = styled.div`\nposition:fixed;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nz-index:101;\nwidth:100vw;\nheight:100vh;\ntop:0;\nleft:0;\nbackground: #000;\nopacity: 0.2;\nh3{\n    color: #fff;\n}\n`\n\n\ninterface Props {\n    assetData: AssetType;\n    isSelected?: boolean;\n    globalPlay: boolean;\n    changeAssetData: (newData: AssetType) => void;\n    changeSelectedAsset: (asssetId: string) => void\n}\n\nconst VideoAsset: React.FC<Props> = ({ assetData, isSelected, globalPlay, changeAssetData, changeSelectedAsset }) => {\n    const videoRef = useRef<HTMLVideoElement | null>(null);\n    const [loading, setLoading] = useState<boolean>(true)\n\n    const getVideoDimensions = (e: any) => {\n        changeAssetData({ ...assetData, width: e.target.videoWidth * 0.2, height: e.target.videoHeight * 0.2 })\n        setLoading(false);\n    }\n\n    useEffect(() => {\n        if (videoRef?.current) {\n\n            if (globalPlay) {\n                videoRef.current.play()\n            } else videoRef.current.pause()\n        }\n    }, [videoRef, globalPlay])\n\n    return (\n        <>\n            {loading && <LoadingDiv><h3>Loading...</h3></LoadingDiv>}\n            <Rnd\n                lockAspectRatio\n                size={{ width: assetData.width, height: assetData.height }}\n                position={{ x: assetData.x, y: assetData.y }}\n                style={{ zIndex: isSelected ? 100 : 0 }}\n                onDragStart={() => { changeSelectedAsset(assetData.id) }}\n                onDragStop={(e, d) => { changeAssetData({ ...assetData, x: d.x, y: d.y }) }}\n                onResize={(e, direction, ref, delta, position) => {\n                    changeAssetData({\n                        ...assetData,\n                        width: ref.style.width.slice(0, -2),\n                        height: ref.style.height.slice(0, -2),\n                        ...position,\n                    });\n                }}\n            >\n                <StyledVideo\n                    ref={videoRef}\n                    controls\n                    width={assetData.width}\n                    height={assetData.height}\n                    className={isSelected ? 'selectedAsset' : ''}\n                    src={assetData.url}\n                    onLoadedMetadata={getVideoDimensions}\n                    autoPlay />\n            </Rnd>\n        </>\n\n\n    )\n}\n\nexport default VideoAsset; \n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}