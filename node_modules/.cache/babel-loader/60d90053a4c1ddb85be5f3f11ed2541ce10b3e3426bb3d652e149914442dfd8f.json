{"ast":null,"code":"var _jsxFileName = \"/Users/evgenijrabocij/Documents/Antara/antara-test-task/src/components/Main.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport CanvasComponent from \"./Canvas\";\nimport FormComponent from \"./FormComponent\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const AssetDefaultParams = {\n  x: 0,\n  y: 0,\n  width: 0,\n  height: 0\n};\nconst MainComponent = () => {\n  _s();\n  const [assests, setAssets] = useState([]);\n  const [selectedAsset, setSelected] = useState('');\n  const [globalPlay, setGlobalPlay] = useState(true);\n  const addNewAsset = url => {\n    const id = uuidv4();\n    setAssets([...assests, {\n      ...AssetDefaultParams,\n      id,\n      url\n    }]);\n  };\n  const removeAsset = url => {\n    const newAssetsList = assests.filter(asset => asset.id !== url);\n    setAssets(newAssetsList);\n    setSelected('');\n  };\n  const changeAssetData = newData => {\n    const updatedAssets = assests.map(asset => {\n      return asset.id === newData.id ? {\n        ...newData\n      } : asset;\n    });\n    setAssets(updatedAssets);\n  };\n  const changeSelectedAsset = asssetId => {\n    setSelected(asssetId);\n  };\n  const handleGlobalPlay = () => {\n    setGlobalPlay(!globalPlay);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Canvas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CanvasComponent, {\n      assetsList: assests,\n      globalPlay: globalPlay,\n      changeAssetData: changeAssetData,\n      changeSelectedAsset: changeSelectedAsset,\n      selectedAsset: selectedAsset\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormComponent, {\n      addNewAsset: addNewAsset,\n      globalPlay: globalPlay,\n      removeAsset: removeAsset,\n      changeAssetData: changeAssetData,\n      assetsList: assests,\n      selectedAsset: selectedAsset,\n      handleGlobalPlay: handleGlobalPlay\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(MainComponent, \"EnHEpNRTs0wofpKogLxDik47Vu4=\");\n_c = MainComponent;\nexport default MainComponent;\nvar _c;\n$RefreshReg$(_c, \"MainComponent\");","map":{"version":3,"names":["React","useState","CanvasComponent","FormComponent","v4","uuidv4","jsxDEV","_jsxDEV","Fragment","_Fragment","AssetDefaultParams","x","y","width","height","MainComponent","_s","assests","setAssets","selectedAsset","setSelected","globalPlay","setGlobalPlay","addNewAsset","url","id","removeAsset","newAssetsList","filter","asset","changeAssetData","newData","updatedAssets","map","changeSelectedAsset","asssetId","handleGlobalPlay","children","fileName","_jsxFileName","lineNumber","columnNumber","assetsList","_c","$RefreshReg$"],"sources":["/Users/evgenijrabocij/Documents/Antara/antara-test-task/src/components/Main.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport CanvasComponent from \"./Canvas\";\nimport FormComponent from \"./FormComponent\";\nimport { v4 as uuidv4 } from 'uuid';\n\nexport type AssetType = {\n    id: string;\n    url: string;\n    width: number | string;\n    height: number | string;\n    x: number;\n    y: number;\n}\n\nexport const AssetDefaultParams = {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n}\n\nconst MainComponent: React.FC = () => {\n    const [assests, setAssets] = useState<AssetType[]>([])\n    const [selectedAsset, setSelected] = useState<string>('')\n    const [globalPlay, setGlobalPlay] = useState<boolean>(true)\n\n    const addNewAsset = (url: string) => {\n        const id = uuidv4()\n        setAssets([...assests, { ...AssetDefaultParams, id, url }])\n    }\n\n    const removeAsset = (url: string) => {\n        const newAssetsList = assests.filter((asset) => asset.id !== url)\n        setAssets(newAssetsList)\n        setSelected('')\n    }\n\n    const changeAssetData = (newData: AssetType) => {\n        const updatedAssets = assests.map((asset) => {\n            return asset.id === newData.id ? { ...newData } : asset;\n        })\n        setAssets(updatedAssets);\n    }\n\n    const changeSelectedAsset = (asssetId: string) => {\n        setSelected(asssetId);\n    }\n\n    const handleGlobalPlay = () => {\n        setGlobalPlay(!globalPlay);\n    }\n\n    return (\n        <>\n            <h3>Canvas</h3>\n            <CanvasComponent\n                assetsList={assests}\n                globalPlay={globalPlay}\n                changeAssetData={changeAssetData}\n                changeSelectedAsset={changeSelectedAsset}\n                selectedAsset={selectedAsset} />\n            <FormComponent\n                addNewAsset={addNewAsset}\n                globalPlay={globalPlay}\n                removeAsset={removeAsset}\n                changeAssetData={changeAssetData}\n                assetsList={assests}\n                selectedAsset={selectedAsset}\n                handleGlobalPlay={handleGlobalPlay} />\n        </>\n    )\n}\n\nexport default MainComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}